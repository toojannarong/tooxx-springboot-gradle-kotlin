# This is a basic workflow to help you get started with Actions

name: TooTest

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  JAVA_VERSION: '1.8'                # set this to the Java version to use
  BUILD_TARGET_LOCATION: '${{ github.workspace }}/build/libs'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-jar:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      # Gradle
      - name: Build with Gradle
        run: ./gradlew build
    
      - name: Build Gradle Success
        run: |
          echo Gradle Success Build Success!
          pwd
          ls
          echo list: build/libs
          cd build/libs
          ls
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'TooTest'
          slot-name: 'production'
          publish-profile: ${{ secrets.TOOTEST_AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${BUILD_TARGET_LOCATION}/*.jar
      - name: Install Alibaba Cloud OSSUTIL
        run: wget http://gosspublic.alicdn.com/ossutil/1.6.10/ossutil64 && chmod +x ossutil64
      - name: Configure Alibaba Cloud OSSUTIL
        run: ./ossutil64 config -i ${TOOTEST_ALI_OSS_ACCESS_KEY_ID} -k ${TOOTEST_ALI_OSS_ACCESS_KEY_SECRET} -e ${TOOTEST_ALI_OSS_BUCKET_ENDPOINT} -c .ossutilconfig
      - name: Upload the web folder to the chosen OSS bucket
        run: ./ossutil64 --config-file .ossutilconfig cp ${BUILD_TARGET_LOCATION} oss://${BUCKET} -r -f

 
