# This is a basic workflow to help you get started with Actions

name: TooTest

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  JAVA_VERSION: '1.8'               
  BUILD_TARGET_LOCATION: ${{ github.workspace }}/build/libs
  JAR_LOCATION: ${{ github.workspace }}/build/libs/*.jar
  AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.TOOTEST_AZURE_WEBAPP_PUBLISH_PROFILE }}
  AZURE_WEBAPP_NAME: 'TooTest'
  AZURE_WEBAPP_SLOT_NAME: 'production'
  ALIBABA_REGION_ID: 'ap-southeast-1'
  OSS_BUCKET_ENDPOINT: 'oss-ap-southeast-1.aliyuncs.com'
  OSS_BUCKET_NAME: 'too-test-webapp'
  OSS_BUCKET_KEY: ${{ secrets.TOOTEST_ALI_OSS_ACCESS_KEY_ID }}
  OSS_BUCKET_SECRET: ${{ secrets.TOOTEST_ALI_OSS_ACCESS_KEY_SECRET }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build-and-deploy-azure-alibaba:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      # Gradle
      - name: Build with Gradle
        run: ./gradlew build
    
      - name: Build Gradle Success
        run: |
          echo Gradle Success Build Success!
          pwd
          ls
          echo list: build/libs
          cd build/libs
          ls
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: ${{ env.AZURE_WEBAPP_SLOT_NAME }}
          publish-profile: ${{ env.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: '${{ github.workspace }}/build/libs/*.jar'
      - name: Install Alibaba Cloud OSSUTIL
        run: wget http://gosspublic.alicdn.com/ossutil/1.7.1/ossutil64 && chmod +x ossutil64
      - name: Configure Alibaba Cloud OSSUTIL
        run: ./ossutil64 config -i ${OSS_BUCKET_KEY} -k ${OSS_BUCKET_SECRET} -e ${OSS_BUCKET_ENDPOINT} -c .ossutilconfig
      - name: Upload the web folder to the chosen OSS bucket
        run: ./ossutil64 --config-file .ossutilconfig cp ${BUILD_TARGET_LOCATION} oss://${OSS_BUCKET_NAME} -r -f
      - name: Install Alibaba Cloud wpctl
        run: |
          eval "$(curl -s -L https://raw.githubusercontent.com/toojannarong/tooxx-springboot-gradle-kotlin/main/wpctl-install.sh)"
          ./wpctl configure --access-key-id "${OSS_BUCKET_KEY}" --access-key-secret "${OSS_BUCKET_SECRET}" --region "${ALIBABA_REGION_ID}"  --profile demo 
          ./wpctl env:apply --package ${JAR_LOCATION} --label webplusVersion0.1 --category Java --env TooTest --app ChemIT_Order --create-on-absent
 
